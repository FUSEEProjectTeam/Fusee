//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace C4d {

public class BitmapSaverData : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal BitmapSaverData(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(BitmapSaverData obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~BitmapSaverData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          C4dApiPINVOKE.delete_BitmapSaverData(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public BitmapSaverData(bool memOwn) : this(C4dApiPINVOKE.new_BitmapSaverData(), memOwn) {
    SwigDirectorConnect();
  }

  public virtual IMAGERESULT Save(Filename name, BaseBitmap bm, BaseContainer data, SAVEBIT savebits) {
    IMAGERESULT ret = (IMAGERESULT)(SwigDerivedClassHasMethod("Save", swigMethodTypes0) ? C4dApiPINVOKE.BitmapSaverData_SaveSwigExplicitBitmapSaverData(swigCPtr, Filename.getCPtr(name), BaseBitmap.getCPtr(bm), BaseContainer.getCPtr(data), (int)savebits) : C4dApiPINVOKE.BitmapSaverData_Save(swigCPtr, Filename.getCPtr(name), BaseBitmap.getCPtr(bm), BaseContainer.getCPtr(data), (int)savebits));
    if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool Edit(BaseContainer data) {
    bool ret = (SwigDerivedClassHasMethod("Edit", swigMethodTypes1) ? C4dApiPINVOKE.BitmapSaverData_EditSwigExplicitBitmapSaverData(swigCPtr, BaseContainer.getCPtr(data)) : C4dApiPINVOKE.BitmapSaverData_Edit(swigCPtr, BaseContainer.getCPtr(data)));
    return ret;
  }

  public virtual int GetMaxAlphas(BaseContainer data) {
    int ret = (SwigDerivedClassHasMethod("GetMaxAlphas", swigMethodTypes2) ? C4dApiPINVOKE.BitmapSaverData_GetMaxAlphasSwigExplicitBitmapSaverData(swigCPtr, BaseContainer.getCPtr(data)) : C4dApiPINVOKE.BitmapSaverData_GetMaxAlphas(swigCPtr, BaseContainer.getCPtr(data)));
    return ret;
  }

  public virtual int GetMaxResolution(bool layers) {
    int ret = (SwigDerivedClassHasMethod("GetMaxResolution", swigMethodTypes3) ? C4dApiPINVOKE.BitmapSaverData_GetMaxResolutionSwigExplicitBitmapSaverData(swigCPtr, layers) : C4dApiPINVOKE.BitmapSaverData_GetMaxResolution(swigCPtr, layers));
    return ret;
  }

  public virtual IMAGERESULT Open(SWIGTYPE_p_p_PluginMovieData md, Filename name, BaseBitmap bm, BaseContainer data, SAVEBIT savebits, int fps) {
    IMAGERESULT ret = (IMAGERESULT)(SwigDerivedClassHasMethod("Open", swigMethodTypes4) ? C4dApiPINVOKE.BitmapSaverData_OpenSwigExplicitBitmapSaverData(swigCPtr, SWIGTYPE_p_p_PluginMovieData.getCPtr(md), Filename.getCPtr(name), BaseBitmap.getCPtr(bm), BaseContainer.getCPtr(data), (int)savebits, fps) : C4dApiPINVOKE.BitmapSaverData_Open(swigCPtr, SWIGTYPE_p_p_PluginMovieData.getCPtr(md), Filename.getCPtr(name), BaseBitmap.getCPtr(bm), BaseContainer.getCPtr(data), (int)savebits, fps));
    if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual IMAGERESULT Write(SWIGTYPE_p_PluginMovieData md, BaseBitmap bm) {
    IMAGERESULT ret = (IMAGERESULT)(SwigDerivedClassHasMethod("Write", swigMethodTypes5) ? C4dApiPINVOKE.BitmapSaverData_WriteSwigExplicitBitmapSaverData(swigCPtr, SWIGTYPE_p_PluginMovieData.getCPtr(md), BaseBitmap.getCPtr(bm)) : C4dApiPINVOKE.BitmapSaverData_Write(swigCPtr, SWIGTYPE_p_PluginMovieData.getCPtr(md), BaseBitmap.getCPtr(bm)));
    return ret;
  }

  public virtual void Close(SWIGTYPE_p_p_PluginMovieData md) {
    if (SwigDerivedClassHasMethod("Close", swigMethodTypes6)) C4dApiPINVOKE.BitmapSaverData_CloseSwigExplicitBitmapSaverData(swigCPtr, SWIGTYPE_p_p_PluginMovieData.getCPtr(md)); else C4dApiPINVOKE.BitmapSaverData_Close(swigCPtr, SWIGTYPE_p_p_PluginMovieData.getCPtr(md));
    if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual IMAGERESULT AddSound(SWIGTYPE_p_PluginMovieData md, SWIGTYPE_p_BaseSound snd) {
    IMAGERESULT ret = (IMAGERESULT)(SwigDerivedClassHasMethod("AddSound", swigMethodTypes7) ? C4dApiPINVOKE.BitmapSaverData_AddSoundSwigExplicitBitmapSaverData(swigCPtr, SWIGTYPE_p_PluginMovieData.getCPtr(md), SWIGTYPE_p_BaseSound.getCPtr(snd)) : C4dApiPINVOKE.BitmapSaverData_AddSound(swigCPtr, SWIGTYPE_p_PluginMovieData.getCPtr(md), SWIGTYPE_p_BaseSound.getCPtr(snd)));
    return ret;
  }

  private BitmapSaverData() : this(C4dApiPINVOKE.new_BitmapSaverData(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("Save", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateBitmapSaverData_0(SwigDirectorSave);
    if (SwigDerivedClassHasMethod("Edit", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateBitmapSaverData_1(SwigDirectorEdit);
    if (SwigDerivedClassHasMethod("GetMaxAlphas", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateBitmapSaverData_2(SwigDirectorGetMaxAlphas);
    if (SwigDerivedClassHasMethod("GetMaxResolution", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateBitmapSaverData_3(SwigDirectorGetMaxResolution);
    if (SwigDerivedClassHasMethod("Open", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateBitmapSaverData_4(SwigDirectorOpen);
    if (SwigDerivedClassHasMethod("Write", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateBitmapSaverData_5(SwigDirectorWrite);
    if (SwigDerivedClassHasMethod("Close", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateBitmapSaverData_6(SwigDirectorClose);
    if (SwigDerivedClassHasMethod("AddSound", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateBitmapSaverData_7(SwigDirectorAddSound);
    C4dApiPINVOKE.BitmapSaverData_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(BitmapSaverData));
    return hasDerivedMethod;
  }

  private int SwigDirectorSave(global::System.IntPtr name, global::System.IntPtr bm, global::System.IntPtr data, int savebits) {
    return (int)Save(new Filename(name, false), (bm == global::System.IntPtr.Zero) ? null : new BaseBitmap(bm, false), (data == global::System.IntPtr.Zero) ? null : new BaseContainer(data, false), (SAVEBIT)savebits);
  }

  private bool SwigDirectorEdit(global::System.IntPtr data) {
    return Edit((data == global::System.IntPtr.Zero) ? null : new BaseContainer(data, false));
  }

  private int SwigDirectorGetMaxAlphas(global::System.IntPtr data) {
    return GetMaxAlphas((data == global::System.IntPtr.Zero) ? null : new BaseContainer(data, false));
  }

  private int SwigDirectorGetMaxResolution(bool layers) {
    return GetMaxResolution(layers);
  }

  private int SwigDirectorOpen(global::System.IntPtr md, global::System.IntPtr name, global::System.IntPtr bm, global::System.IntPtr data, int savebits, int fps) {
    return (int)Open(new SWIGTYPE_p_p_PluginMovieData(md, false), new Filename(name, false), (bm == global::System.IntPtr.Zero) ? null : new BaseBitmap(bm, false), (data == global::System.IntPtr.Zero) ? null : new BaseContainer(data, false), (SAVEBIT)savebits, fps);
  }

  private int SwigDirectorWrite(global::System.IntPtr md, global::System.IntPtr bm) {
    return (int)Write((md == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_PluginMovieData(md, false), (bm == global::System.IntPtr.Zero) ? null : new BaseBitmap(bm, false));
  }

  private void SwigDirectorClose(global::System.IntPtr md) {
    Close(new SWIGTYPE_p_p_PluginMovieData(md, false));
  }

  private int SwigDirectorAddSound(global::System.IntPtr md, global::System.IntPtr snd) {
    return (int)AddSound((md == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_PluginMovieData(md, false), (snd == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_BaseSound(snd, false));
  }

  public delegate int SwigDelegateBitmapSaverData_0(global::System.IntPtr name, global::System.IntPtr bm, global::System.IntPtr data, int savebits);
  public delegate bool SwigDelegateBitmapSaverData_1(global::System.IntPtr data);
  public delegate int SwigDelegateBitmapSaverData_2(global::System.IntPtr data);
  public delegate int SwigDelegateBitmapSaverData_3(bool layers);
  public delegate int SwigDelegateBitmapSaverData_4(global::System.IntPtr md, global::System.IntPtr name, global::System.IntPtr bm, global::System.IntPtr data, int savebits, int fps);
  public delegate int SwigDelegateBitmapSaverData_5(global::System.IntPtr md, global::System.IntPtr bm);
  public delegate void SwigDelegateBitmapSaverData_6(global::System.IntPtr md);
  public delegate int SwigDelegateBitmapSaverData_7(global::System.IntPtr md, global::System.IntPtr snd);

  private SwigDelegateBitmapSaverData_0 swigDelegate0;
  private SwigDelegateBitmapSaverData_1 swigDelegate1;
  private SwigDelegateBitmapSaverData_2 swigDelegate2;
  private SwigDelegateBitmapSaverData_3 swigDelegate3;
  private SwigDelegateBitmapSaverData_4 swigDelegate4;
  private SwigDelegateBitmapSaverData_5 swigDelegate5;
  private SwigDelegateBitmapSaverData_6 swigDelegate6;
  private SwigDelegateBitmapSaverData_7 swigDelegate7;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(Filename), typeof(BaseBitmap), typeof(BaseContainer), typeof(SAVEBIT) };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(BaseContainer) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(BaseContainer) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(bool) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(SWIGTYPE_p_p_PluginMovieData), typeof(Filename), typeof(BaseBitmap), typeof(BaseContainer), typeof(SAVEBIT), typeof(int) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(SWIGTYPE_p_PluginMovieData), typeof(BaseBitmap) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(SWIGTYPE_p_p_PluginMovieData) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(SWIGTYPE_p_PluginMovieData), typeof(SWIGTYPE_p_BaseSound) };
}

}
