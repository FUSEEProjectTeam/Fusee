//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace C4d {

public class VPFragment : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal VPFragment(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(VPFragment obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~VPFragment() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          C4dApiPINVOKE.delete_VPFragment(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public RayHitID id {
    set {
      C4dApiPINVOKE.VPFragment_id_set(swigCPtr, RayHitID.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = C4dApiPINVOKE.VPFragment_id_get(swigCPtr);
      RayHitID ret = (cPtr == global::System.IntPtr.Zero) ? null : new RayHitID(cPtr, false);
      return ret;
    } 
  }

  public byte subx {
    set {
      C4dApiPINVOKE.VPFragment_subx_set(swigCPtr, value);
    } 
    get {
      byte ret = C4dApiPINVOKE.VPFragment_subx_get(swigCPtr);
      return ret;
    } 
  }

  public byte suby {
    set {
      C4dApiPINVOKE.VPFragment_suby_set(swigCPtr, value);
    } 
    get {
      byte ret = C4dApiPINVOKE.VPFragment_suby_get(swigCPtr);
      return ret;
    } 
  }

  public short weight {
    set {
      C4dApiPINVOKE.VPFragment_weight_set(swigCPtr, value);
    } 
    get {
      short ret = C4dApiPINVOKE.VPFragment_weight_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_RayObject op {
    set {
      C4dApiPINVOKE.VPFragment_op_set(swigCPtr, SWIGTYPE_p_RayObject.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = C4dApiPINVOKE.VPFragment_op_get(swigCPtr);
      SWIGTYPE_p_RayObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_RayObject(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_Vector32 color {
    set {
      C4dApiPINVOKE.VPFragment_color_set(swigCPtr, SWIGTYPE_p_Vector32.getCPtr(value));
      if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_Vector32 ret = new SWIGTYPE_p_Vector32(C4dApiPINVOKE.VPFragment_color_get(swigCPtr), true);
      if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double z {
    set {
      C4dApiPINVOKE.VPFragment_z_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.VPFragment_z_get(swigCPtr);
      return ret;
    } 
  }

  public Fusee.Math.Core.double3 /* Vector_cstype_out */ p {
    /* <Vector_csvarin> */
    set 
	{
      C4dApiPINVOKE.VPFragment_p_set(swigCPtr, value /* Vector_csin */);
    }  /* </Vector_csvarin> */   
   /* <Vector_csvarout> */
   get
   {  
      Fusee.Math.Core.double3 ret = C4dApiPINVOKE.VPFragment_p_get(swigCPtr);
      return ret;
   } /* <Vector_csvarout> */ 
  }

  public Fusee.Math.Core.double3 /* Vector_cstype_out */ n {
    /* <Vector_csvarin> */
    set 
	{
      C4dApiPINVOKE.VPFragment_n_set(swigCPtr, value /* Vector_csin */);
    }  /* </Vector_csvarin> */   
   /* <Vector_csvarout> */
   get
   {  
      Fusee.Math.Core.double3 ret = C4dApiPINVOKE.VPFragment_n_get(swigCPtr);
      return ret;
   } /* <Vector_csvarout> */ 
  }

  public VPFragment next {
    set {
      C4dApiPINVOKE.VPFragment_next_set(swigCPtr, VPFragment.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = C4dApiPINVOKE.VPFragment_next_get(swigCPtr);
      VPFragment ret = (cPtr == global::System.IntPtr.Zero) ? null : new VPFragment(cPtr, false);
      return ret;
    } 
  }

  public VPFragment() : this(C4dApiPINVOKE.new_VPFragment(), true) {
  }

}

}
