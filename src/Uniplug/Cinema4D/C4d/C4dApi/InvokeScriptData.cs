//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace C4d {

public class InvokeScriptData : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal InvokeScriptData(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(InvokeScriptData obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~InvokeScriptData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          C4dApiPINVOKE.delete_InvokeScriptData(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public string /* constString&_cstype */ functionName {
    set {
      C4dApiPINVOKE.InvokeScriptData_functionName_set(swigCPtr, value);
      if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = C4dApiPINVOKE.InvokeScriptData_functionName_get(swigCPtr);
      if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public GeData arg1 {
    set {
      C4dApiPINVOKE.InvokeScriptData_arg1_set(swigCPtr, GeData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = C4dApiPINVOKE.InvokeScriptData_arg1_get(swigCPtr);
      GeData ret = (cPtr == global::System.IntPtr.Zero) ? null : new GeData(cPtr, false);
      return ret;
    } 
  }

  public GeData arg2 {
    set {
      C4dApiPINVOKE.InvokeScriptData_arg2_set(swigCPtr, GeData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = C4dApiPINVOKE.InvokeScriptData_arg2_get(swigCPtr);
      GeData ret = (cPtr == global::System.IntPtr.Zero) ? null : new GeData(cPtr, false);
      return ret;
    } 
  }

  public GeData arg3 {
    set {
      C4dApiPINVOKE.InvokeScriptData_arg3_set(swigCPtr, GeData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = C4dApiPINVOKE.InvokeScriptData_arg3_get(swigCPtr);
      GeData ret = (cPtr == global::System.IntPtr.Zero) ? null : new GeData(cPtr, false);
      return ret;
    } 
  }

  public GeData result {
    set {
      C4dApiPINVOKE.InvokeScriptData_result_set(swigCPtr, GeData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = C4dApiPINVOKE.InvokeScriptData_result_get(swigCPtr);
      GeData ret = (cPtr == global::System.IntPtr.Zero) ? null : new GeData(cPtr, false);
      return ret;
    } 
  }

  public InvokeScriptData() : this(C4dApiPINVOKE.new_InvokeScriptData(), true) {
  }

}

}
