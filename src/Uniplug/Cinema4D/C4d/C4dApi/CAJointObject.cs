//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace C4d {

public class CAJointObject : BaseObject {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CAJointObject(global::System.IntPtr cPtr, bool cMemoryOwn) : base(C4dApiPINVOKE.CAJointObject_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CAJointObject obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static CAJointObject Alloc() {
    global::System.IntPtr cPtr = C4dApiPINVOKE.CAJointObject_Alloc();
    CAJointObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new CAJointObject(cPtr, false);
    return ret;
  }

  public static void Free(SWIGTYPE_p_p_CAJointObject pObject) {
    C4dApiPINVOKE.CAJointObject_Free(SWIGTYPE_p_p_CAJointObject.getCPtr(pObject));
    if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetBone(ref Fusee.Math.Core.double4x4 /* Matrix*&_cstype */ m, SWIGTYPE_p_Float len) {
    double[] adbl_m;
    unsafe {adbl_m = Fusee.Math.ArrayConvert.double4x4ToArrayDoubleC4DLayout(m);    fixed (double *pdbl_m = adbl_m) {
    /* Matrix*&_csin_pre */
    try {
      C4dApiPINVOKE.CAJointObject_GetBone(swigCPtr, (global::System.IntPtr) pdbl_m /* Matrix*&_csin */, SWIGTYPE_p_Float.getCPtr(len));
      if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
    } finally {
        m = Fusee.Math.ArrayConvert.ArrayDoubleC4DLayoutTodouble4x4(pdbl_m);
        /* Matrix*&_csin_post */
    }
} } /* Matrix*&_csin_terminator */
  }

  public CAWeightTag GetWeightTag(SWIGTYPE_p_Int32 index) {
    global::System.IntPtr cPtr = C4dApiPINVOKE.CAJointObject_GetWeightTag(swigCPtr, SWIGTYPE_p_Int32.getCPtr(index));
    CAWeightTag ret = (cPtr == global::System.IntPtr.Zero) ? null : new CAWeightTag(cPtr, false);
    if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
