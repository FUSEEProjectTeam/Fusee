//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace C4d {

public class RayIllumination : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal RayIllumination(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(RayIllumination obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~RayIllumination() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          C4dApiPINVOKE.delete_RayIllumination(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public RayIllumination() : this(C4dApiPINVOKE.new_RayIllumination(), true) {
  }

  public double gi_receive_strength {
    set {
      C4dApiPINVOKE.RayIllumination_gi_receive_strength_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_gi_receive_strength_get(swigCPtr);
      return ret;
    } 
  }

  public double gi_generate_strength {
    set {
      C4dApiPINVOKE.RayIllumination_gi_generate_strength_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_gi_generate_strength_get(swigCPtr);
      return ret;
    } 
  }

  public double gi_saturation {
    set {
      C4dApiPINVOKE.RayIllumination_gi_saturation_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_gi_saturation_get(swigCPtr);
      return ret;
    } 
  }

  public double gi_generate_saturation {
    set {
      C4dApiPINVOKE.RayIllumination_gi_generate_saturation_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_gi_generate_saturation_get(swigCPtr);
      return ret;
    } 
  }

  public double cs_receive_strength {
    set {
      C4dApiPINVOKE.RayIllumination_cs_receive_strength_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_cs_receive_strength_get(swigCPtr);
      return ret;
    } 
  }

  public double cs_generate_strength {
    set {
      C4dApiPINVOKE.RayIllumination_cs_generate_strength_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_cs_generate_strength_get(swigCPtr);
      return ret;
    } 
  }

  public double cs_sampleradius {
    set {
      C4dApiPINVOKE.RayIllumination_cs_sampleradius_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_cs_sampleradius_get(swigCPtr);
      return ret;
    } 
  }

  public int cs_accuracy {
    set {
      C4dApiPINVOKE.RayIllumination_cs_accuracy_set(swigCPtr, value);
    } 
    get {
      int ret = C4dApiPINVOKE.RayIllumination_cs_accuracy_get(swigCPtr);
      return ret;
    } 
  }

  public double trans_dispersion {
    set {
      C4dApiPINVOKE.RayIllumination_trans_dispersion_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_trans_dispersion_get(swigCPtr);
      return ret;
    } 
  }

  public double trans_accuracy {
    set {
      C4dApiPINVOKE.RayIllumination_trans_accuracy_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_trans_accuracy_get(swigCPtr);
      return ret;
    } 
  }

  public int trans_minsamples {
    set {
      C4dApiPINVOKE.RayIllumination_trans_minsamples_set(swigCPtr, value);
    } 
    get {
      int ret = C4dApiPINVOKE.RayIllumination_trans_minsamples_get(swigCPtr);
      return ret;
    } 
  }

  public int trans_maxsamples {
    set {
      C4dApiPINVOKE.RayIllumination_trans_maxsamples_set(swigCPtr, value);
    } 
    get {
      int ret = C4dApiPINVOKE.RayIllumination_trans_maxsamples_get(swigCPtr);
      return ret;
    } 
  }

  public double refl_dispersion {
    set {
      C4dApiPINVOKE.RayIllumination_refl_dispersion_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_refl_dispersion_get(swigCPtr);
      return ret;
    } 
  }

  public double refl_accuracy {
    set {
      C4dApiPINVOKE.RayIllumination_refl_accuracy_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.RayIllumination_refl_accuracy_get(swigCPtr);
      return ret;
    } 
  }

  public int refl_minsamples {
    set {
      C4dApiPINVOKE.RayIllumination_refl_minsamples_set(swigCPtr, value);
    } 
    get {
      int ret = C4dApiPINVOKE.RayIllumination_refl_minsamples_get(swigCPtr);
      return ret;
    } 
  }

  public int refl_maxsamples {
    set {
      C4dApiPINVOKE.RayIllumination_refl_maxsamples_set(swigCPtr, value);
    } 
    get {
      int ret = C4dApiPINVOKE.RayIllumination_refl_maxsamples_get(swigCPtr);
      return ret;
    } 
  }

}

}
