//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace C4d {

public class PickSessionDataStruct : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PickSessionDataStruct(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PickSessionDataStruct obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PickSessionDataStruct() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          C4dApiPINVOKE.delete_PickSessionDataStruct(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public AtomArray active {
    set {
      C4dApiPINVOKE.PickSessionDataStruct_active_set(swigCPtr, AtomArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = C4dApiPINVOKE.PickSessionDataStruct_active_get(swigCPtr);
      AtomArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new AtomArray(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_f_Int32_p_q_const__PickSessionDataStruct__void callback {
    set {
      C4dApiPINVOKE.PickSessionDataStruct_callback_set(swigCPtr, SWIGTYPE_p_f_Int32_p_q_const__PickSessionDataStruct__void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = C4dApiPINVOKE.PickSessionDataStruct_callback_get(swigCPtr);
      SWIGTYPE_p_f_Int32_p_q_const__PickSessionDataStruct__void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_Int32_p_q_const__PickSessionDataStruct__void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_void userdata {
    set {
      C4dApiPINVOKE.PickSessionDataStruct_userdata_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = C4dApiPINVOKE.PickSessionDataStruct_userdata_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public bool multi {
    set {
      C4dApiPINVOKE.PickSessionDataStruct_multi_set(swigCPtr, value);
    } 
    get {
      bool ret = C4dApiPINVOKE.PickSessionDataStruct_multi_get(swigCPtr);
      return ret;
    } 
  }

  public PickSessionDataStruct() : this(C4dApiPINVOKE.new_PickSessionDataStruct(), true) {
  }

}

}
