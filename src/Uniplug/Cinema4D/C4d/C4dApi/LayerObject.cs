//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace C4d {

public class LayerObject : BaseList2D {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal LayerObject(global::System.IntPtr cPtr, bool cMemoryOwn) : base(C4dApiPINVOKE.LayerObject_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(LayerObject obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static LayerObject Alloc() {
    global::System.IntPtr cPtr = C4dApiPINVOKE.LayerObject_Alloc();
    LayerObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new LayerObject(cPtr, false);
    return ret;
  }

  public static void Free(SWIGTYPE_p_p_LayerObject bl) {
    C4dApiPINVOKE.LayerObject_Free(SWIGTYPE_p_p_LayerObject.getCPtr(bl));
    if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
  }

  public new LayerObject GetNext() {
    global::System.IntPtr cPtr = C4dApiPINVOKE.LayerObject_GetNext(swigCPtr);
    LayerObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new LayerObject(cPtr, false);
    return ret;
  }

  public new LayerObject GetPred() {
    global::System.IntPtr cPtr = C4dApiPINVOKE.LayerObject_GetPred(swigCPtr);
    LayerObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new LayerObject(cPtr, false);
    return ret;
  }

  public new LayerObject GetUp() {
    global::System.IntPtr cPtr = C4dApiPINVOKE.LayerObject_GetUp(swigCPtr);
    LayerObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new LayerObject(cPtr, false);
    return ret;
  }

  public new LayerObject GetDown() {
    global::System.IntPtr cPtr = C4dApiPINVOKE.LayerObject_GetDown(swigCPtr);
    LayerObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new LayerObject(cPtr, false);
    return ret;
  }

  public new LayerObject GetDownLast() {
    global::System.IntPtr cPtr = C4dApiPINVOKE.LayerObject_GetDownLast(swigCPtr);
    LayerObject ret = (cPtr == global::System.IntPtr.Zero) ? null : new LayerObject(cPtr, false);
    return ret;
  }

}

}
