//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace C4d {

public class AutoSpinLock : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal AutoSpinLock(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(AutoSpinLock obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~AutoSpinLock() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          C4dApiPINVOKE.delete_AutoSpinLock(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public AutoSpinLock(GeSpinlock arg0) : this(C4dApiPINVOKE.new_AutoSpinLock__SWIG_0(GeSpinlock.getCPtr(arg0)), true) {
  }

  public AutoSpinLock() : this(C4dApiPINVOKE.new_AutoSpinLock__SWIG_1(), true) {
  }

  public void DoLock(GeSpinlock arg0) {
    C4dApiPINVOKE.AutoSpinLock_DoLock(swigCPtr, GeSpinlock.getCPtr(arg0));
  }

  public void Unlock() {
    C4dApiPINVOKE.AutoSpinLock_Unlock(swigCPtr);
  }

}

}
