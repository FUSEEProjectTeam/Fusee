<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <PackageId>Fusee.Tools.CmdLine</PackageId>
    <AssemblyName>fusee</AssemblyName>
    <TargetFramework>net5.0-windows</TargetFramework>
    <OutputType>Exe</OutputType>
    <PackAsTool>true</PackAsTool>
    <ToolCommandName>fusee</ToolCommandName>
    <PackageTags>dotnet;tools;fusee</PackageTags>
    <OutputPath>$(BaseOutputPath)\Tools\CmdLine</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="$(FuseeEngineRoot)\bin\$(Configuration)\Player\Desktop\$(TargetFramework)\win-x64\publish\Fusee.Engine.Player.Desktop.exe" Link="NuGet\Player.exe" PackagePath="tools\$(TargetFramework)\any\Player.exe" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Base\Core\Fusee.Base.Core.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Engine\Core\Fusee.Engine.Core.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Math\Core\Fusee.Math.Core.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Serialization\Fusee.Serialization.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Xene\Fusee.Xene.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Base\Imp\Desktop\Fusee.Base.Imp.Desktop.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Engine\Imp\Graphics\Desktop\Fusee.Engine.Imp.Graphics.Desktop.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Engine\Player\Core\Fusee.Engine.Player.Core.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <PackageReference Include="CommandLineParser" Version="2.8.0" />
    <!-- Do not update Google.Protobuf.Tools without testing a clean built Blender addon -->
    <PackageReference Include="Google.Protobuf.Tools" Version="3.11.4" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Win32.Registry" Version="5.0.0" />
    <PackageReference Include="System.Drawing.Common" Version="5.0.2" />
  </ItemGroup>

  <!-- BUILD THE BLENDER ADDON (Re-Generate Python .fus Serialization code and build zip file)
	 This code should be part of the respective .pyproj project file. Unfortunately .pyprojects
	 don't do anything during "Build". Thus Post-Build steps are non functional. -->
  <!-- Names and directories -->
  <PropertyGroup>
    <BlenderAddOnProjectName>io_export_fus</BlenderAddOnProjectName>
  </PropertyGroup>

  <!-- Since we are using protoc from Google.Protobuf.Tools and they are switching up the directory seperators from windows to linux and paths are only recognized if they are consistent we have to use different targets for windows and linux here -->

  <Target Name="BlenderAddonPostBuildStepWindows" AfterTargets="Build" Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'True'">
    <!-- Use protoc from Goole.Protobuf.Tools nuget package -->
    <PropertyGroup>
      <BlenderAddonSourcePath>$(FuseeEngineRoot)\src\Tools\BlenderScripts\addons\$(BlenderAddOnProjectName)</BlenderAddonSourcePath>
      <BlenderAddonOutputPath>$(OutputPath)\BlenderScripts\addons</BlenderAddonOutputPath>
      <protoc_executable>$(protoc_windows64)</protoc_executable>
    </PropertyGroup>
    <!-- Input files part of the Addon -->
    <ItemGroup>
      <BlenderAddonPythonFiles Include="$(BlenderAddonSourcePath)\**\*.py" />
      <BlenderAddonProtobufPythonFiles Include="$(FuseeEngineRoot)\ext\protobuf\Python\**\*" />
    </ItemGroup>
    <!-- Create the protoschema -->
    <Exec Timeout="120000" Command="dotnet &quot;$(FuseeEngineRoot)\bin\$(Configuration)\Tools\CmdLine\$(TargetFramework)\fusee.dll&quot; protoschema -o &quot;$(BlenderAddonSourcePath)\proto\FusSerialization.proto&quot;" />
    <!-- call the protobuf code generator to build the python code -->
    <!-- for FusSerialization.proto -->
    <Exec WorkingDirectory="$(BlenderAddonSourcePath)\proto" Command="&quot;$(protoc_executable)&quot; --proto_path=&quot;$(protoc_tools)\&quot; --proto_path=&quot;$(BlenderAddonSourcePath)\proto&quot; --python_out=&quot;$(BlenderAddonSourcePath)\proto&quot; &quot;$(BlenderAddonSourcePath)\proto\FusSerialization.proto&quot;" />
    <Copy SourceFiles="$(BlenderAddonSourcePath)\proto\FusSerialization.proto;$(BlenderAddonSourcePath)\proto\FusSerialization_pb2.py" DestinationFolder="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName)\proto" />
    <!-- Copy the python files to the bin output folder -->
    <Copy SourceFiles="@(BlenderAddonPythonFiles)" DestinationFolder="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName)\%(RecursiveDir)" />
    <Copy SourceFiles="@(BlenderAddonProtobufPythonFiles)" DestinationFolder="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName)\%(RecursiveDir)" />

    <ItemGroup>
      <Content Include="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName)\**" PackagePath="tools\$(TargetFramework)\any\BlenderScripts\addons\$(BlenderAddOnProjectName)" />
    </ItemGroup>
  </Target>

  <Target Name="BlenderAddonPostBuildStepLinux" AfterTargets="Build" Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'True'">
    <!-- Use protoc from Goole.Protobuf.Tools nuget package -->
    <PropertyGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'True'">
      <BlenderAddonSourcePath>$(FuseeEngineRoot)/src/Tools/BlenderScripts/addons/$(BlenderAddOnProjectName)</BlenderAddonSourcePath>
      <BlenderAddonOutputPath>$(OutputPath)/BlenderScripts/addons</BlenderAddonOutputPath>
      <protoc_executable>$(protoc_linux64)</protoc_executable>
    </PropertyGroup>
    <!-- Input files part of the Addon -->
    <ItemGroup>
      <BlenderAddonPythonFiles Include="$(BlenderAddonSourcePath)/**/*.py" />
      <BlenderAddonProtobufPythonFiles Include="$(FuseeEngineRoot)/ext/protobuf/Python/**/*" />
    </ItemGroup>
    <!-- Create the protoschema -->
    <Exec Timeout="120000" Command="dotnet &quot;$(FuseeEngineRoot)/bin/$(Configuration)/Tools/CmdLine/$(TargetFramework)/fusee.dll&quot; protoschema -o &quot;$(BlenderAddonSourcePath)/proto/FusSerialization.proto&quot;" />
    <!-- call the protobuf code generator to build the python code -->
    <!-- for FusSerialization.proto -->
    <Exec WorkingDirectory="$(BlenderAddonSourcePath)/proto" Command="&quot;$(protoc_executable)&quot; --proto_path=&quot;$(protoc_tools)&quot; --proto_path=&quot;$(BlenderAddonSourcePath)/proto&quot; --python_out=&quot;$(BlenderAddonSourcePath)/proto&quot; &quot;$(BlenderAddonSourcePath)/proto/FusSerialization.proto&quot;" />
    <Copy SourceFiles="$(BlenderAddonSourcePath)/proto/FusSerialization.proto;$(BlenderAddonSourcePath)/proto/FusSerialization_pb2.py" DestinationFolder="$(BlenderAddonOutputPath)/$(BlenderAddOnProjectName)/proto" />
    <!-- Copy the python files to the bin output folder -->
    <Copy SourceFiles="@(BlenderAddonPythonFiles)" DestinationFolder="$(BlenderAddonOutputPath)/$(BlenderAddOnProjectName)/%(RecursiveDir)" />
    <Copy SourceFiles="@(BlenderAddonProtobufPythonFiles)" DestinationFolder="$(BlenderAddonOutputPath)/$(BlenderAddOnProjectName)/%(RecursiveDir)" />

    <ItemGroup>
      <Content Include="$(BlenderAddonOutputPath)/$(BlenderAddOnProjectName)/**" PackagePath="tools/$(TargetFramework)/any/BlenderScripts/addons/$(BlenderAddOnProjectName)" />
    </ItemGroup>
  </Target>
</Project>
