<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <AssemblyName>fusee</AssemblyName>
    <PackageId>Fusee.Tools.CmdLine</PackageId>
    <RootNamespace>Fusee.Tools.fuseeCmdLine</RootNamespace>
    <PackAsTool>true</PackAsTool>
    <ToolCommandName>fusee</ToolCommandName>
    <PackageTags>dotnet;tools;fusee</PackageTags>
  </PropertyGroup>
  
  <PropertyGroup>
    <OutputPath>$(BaseOutputPath)\Tools\CmdLine</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="$(FuseeEngineRoot)\bin\$(Configuration)\Player\Desktop\win-x64\publish\Fusee.Engine.Player.Desktop.exe" Link="NuGet\Player.exe" PackagePath="tools\netcoreapp3.0\any\Player.exe" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Base\Core\Fusee.Base.Core.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Engine\Core\Fusee.Engine.Core.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Math\Core\Fusee.Math.Core.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Serialization\Fusee.Serialization.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Xene\Fusee.Xene.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Base\Imp\Desktop\Fusee.Base.Imp.Desktop.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Engine\Imp\Graphics\Desktop\Fusee.Engine.Imp.Graphics.Desktop.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
    <ProjectReference Include="$(FuseeEngineRoot)\src\Engine\Player\Core\Fusee.Engine.Player.Core.csproj">
      <PrivateAssets>analyzers</PrivateAssets>
    </ProjectReference>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CommandLineParser" Version="2.6.0" />
    <PackageReference Include="Google.Protobuf.Tools" Version="3.9.1" />
    <PackageReference Include="Microsoft.Win32.Registry" Version="4.6.0" />
  </ItemGroup>  
  
  <!-- BUILD THE BLENDER ADDON (Re-Generate Python .fus Serialization code and build zip file)
	 This code should be part of the respective .pyproj project file. Unforntunately .pyprojects
	 don't do anything during "Build". Thus Post-Build steps are non functional. -->
  <!-- Names and directoreies -->
  <PropertyGroup>
    <BlenderAddOnProjectName>io_export_fus</BlenderAddOnProjectName>
    <BlenderAddonSourcePath>$(FuseeEngineRoot)\src\Tools\BlenderScripts\addons\$(BlenderAddOnProjectName)</BlenderAddonSourcePath>
    <BlenderAddonOutputPath>$(OutputPath)\BlenderScripts\addons</BlenderAddonOutputPath>
    <ApplicationIcon>FuseeLogo.ico</ApplicationIcon>
  </PropertyGroup>

  <Target Name="BlenderAddonPostBuildStep" AfterTargets="Build">
    <!-- Use protoc from Goole.Protobuf.Tools nuget package -->
    <PropertyGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'True'">
      <protoc_executable>$(protoc_windows64)</protoc_executable>
    </PropertyGroup>
    <PropertyGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'True'">
      <protoc_executable>$(protoc_linux64)</protoc_executable>
    </PropertyGroup>
    <!-- Input files part of the Addon -->
    <ItemGroup>
      <BlenderAddonPythonFiles Include="$(BlenderAddonSourcePath)\**\*.py" />
      <BlenderAddonProtobufPythonFiles Include="$(FuseeEngineRoot)\ext\protobuf\Python\**\*" />
    </ItemGroup>
    <!-- Create the protoschema -->
    <Exec ContinueOnError="true" Timeout="120000" Command="&quot;$(FuseeEngineRoot)\bin\$(Configuration)\Tools\CmdLine\fusee.exe&quot; protoschema -o $(BlenderAddonSourcePath)\proto_src\Scene.proto&quot;" />
    <!-- call the protobuf code generator to build the python code -->
    <!-- for Scene.proto -->
    <Exec WorkingDirectory="$(BlenderAddonSourcePath)\proto_src" Command="$(protoc_executable) --proto_path=$(protoc_tools) --proto_path=$(BlenderAddonSourcePath)\proto_src --python_out=$(BlenderAddonSourcePath)\proto Scene.proto" />
    <Copy SourceFiles="$(BlenderAddonSourcePath)\proto_src\Scene.proto;$(BlenderAddonSourcePath)\proto\Scene_pb2.py" DestinationFolder="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName)\proto" />
    <!-- for bcl.proto -->
    <Exec WorkingDirectory="$(BlenderAddonSourcePath)\proto_src" Command="$(protoc_executable) --proto_path=$(protoc_tools) --proto_path=$(BlenderAddonSourcePath)\proto_src\protobuf-net --python_out=$(BlenderAddonSourcePath)\proto bcl.proto" />
    <Copy SourceFiles="$(BlenderAddonSourcePath)\proto_src\protobuf-net\bcl.proto;$(BlenderAddonSourcePath)\proto\bcl_pb2.py" DestinationFolder="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName)\proto\protobuf_net\" />
    <!-- for protogen.proto -->
    <Exec WorkingDirectory="$(BlenderAddonSourcePath)\proto_src" Command="$(protoc_executable) --proto_path=$(protoc_tools) --proto_path=$(BlenderAddonSourcePath)\proto_src\protobuf-net --python_out=$(BlenderAddonSourcePath)\proto protogen.proto" />
    <Copy SourceFiles="$(BlenderAddonSourcePath)\proto_src\protobuf-net\protogen.proto;$(BlenderAddonSourcePath)\proto\protogen_pb2.py" DestinationFolder="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName)\proto\protobuf_net\" />
    <!-- Copy the python files to the bin output folder -->
    <Copy SourceFiles="@(BlenderAddonPythonFiles)" DestinationFolder="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName)\%(RecursiveDir)" />
    <Copy SourceFiles="@(BlenderAddonProtobufPythonFiles)" DestinationFolder="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName)\proto\%(RecursiveDir)" />
    
    <!-- zip it all together CRASHES THE SOLUTION ON MACHINES WITHOUT THE COMMUNITY TASKS INSTALLED. NO WAY TO FIND OUT IF ALREADY INSTALLED. THANK YOU MS BUILD -->
    <!-- uses the Zip task from the MSBuild Community Tasks https://github.com/loresoft/msbuildtasks/blob/master/Documentation/TaskDocs.md#Zip -->
    <!-- install from https://github.com/loresoft/msbuildtasks/releases -->
    <!-- Message Importance="High" Text="[FUSEE BlenderAddon] Zipping %(BlenderAddonPythonFiles.Filename) into $(BlenderAddOnProjectName).zip" /^-->
    <!-- Condition="Exists($(MSBuildCommunityTargets))"/ -->
    <!-- Message Importance="High" Text="[ERROR Creating FUSEE BlenderAddon] $(BlenderAddOnProjectName).zip. Zip Task not installed. Install MSBuildCommunityTasks from https://github.com/loresoft/msbuildtasks/releases!!" Condition="!Exists($(MSBuildCommunityTargets))"/ -->
    <!-- Zip ZipFileName="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName).zip" WorkingDirectory="$(BlenderAddonSourcePath)\..\" Files="@(BlenderAddonPythonFiles)" /-->
    <!-- Condition="Exists($(MSBuildCommunityTargets))"/ -->

    <ItemGroup>
      <Content Include="$(BlenderAddonOutputPath)\$(BlenderAddOnProjectName)\**" PackagePath="tools\netcoreapp3.0\any\BlenderScripts\addons\$(BlenderAddOnProjectName)" />
    </ItemGroup>
  </Target>
</Project>
